{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","data","index","localSearchArticulos","store","indice","secciones_desc","capitulos_desc","secc_articulos","Set","nodes","map","node","NRO_SECCION","DESC_SECCION","seccion","arts","filter","NRO_CAPITULO","DESC_CAPITULO","cap","captitulos","cant_articulos","length","useState","query","setQuery","querySinAcento","setQuerySinAcento","results","useLunr","results_array","result","numeroArticulo","title","className","placeholder","name","value","onChange","event","target","normalize","replace","secciones_filtradas","art","includes","NRO_ARTICULO","toString","key","capitulo","capitulos_filtrados","to","DESC_ARTICULO","pageQuery"],"mappings":"iOAiHeA,UArGG,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAEVC,EAAQD,EAAKE,qBAAqBD,MAClCE,EAAQH,EAAKE,qBAAqBC,MAClCC,EAASJ,EAAKI,OAGdC,EAAiB,GACjBC,EAAiB,GAMjBC,EALS,YAAO,IAAIC,IAAIJ,EAAOK,MAAMC,KAAI,SAAAC,GAG3C,OAFAN,EAAeM,EAAKC,aAAeD,EAAKE,aACxCP,EAAeK,EAAKC,aAAe,GAC5BD,EAAKC,iBAEiBF,KAAI,SAACI,GAClC,IAAMC,EAAOX,EAAOK,MAAMO,QAAO,SAAAL,GAAI,OAAIA,EAAKC,cAAgBE,KAASJ,KAAI,SAAAC,GAEvE,OADAL,EAAeQ,GAASH,EAAKM,cAAgBN,EAAKO,cAC3CP,EAAKM,gBAEVE,EAAG,YAAO,IAAIX,IAAIO,IACxB,MAAO,CACHD,QAASA,EACTM,WAAYD,EACZE,eAAgBN,EAAKO,WAvBH,EA2BAC,mBAAS,IAA5BC,EA3BmB,KA2BZC,EA3BY,OA4BkBF,mBAAS,IAA9CG,EA5BmB,KA4BHC,EA5BG,KA6BpBC,EAAUC,YAAQH,EAAgBzB,EAAOE,GACzC2B,EAAgBF,EAAQlB,KAAI,SAAAqB,GAAM,OAAIA,EAAOC,kBAUnD,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,MAAM,wBACX,uBAAGC,UAAU,kDAAb,0JAIA,yBAAKA,UAAU,+BACX,2BACIC,YAAa,+BACbD,UAAU,uFACVE,KAAK,QACLC,MAAOb,EACPc,SAAU,SAACC,GACPd,EAASc,EAAMC,OAAOH,OACtBV,EAAiCY,EAAMC,OAAOH,MA1DtDI,UAAU,OAAOC,QAAQ,mBAAoB,QA6D7C,0BAAMR,UAAU,8CAEhB,uBAAGA,UAAU,QACRN,EAAQN,OAAS,EAAK,oEAA0CE,EAA1C,KACnB,4EAIZ,yBAAKU,UAAU,aACV3B,EAAeG,KAAI,YAA4C,IAA1CI,EAAyC,EAAzCA,QAASO,EAAgC,EAAhCA,eAAgBD,EAAgB,EAAhBA,WACjCuB,EAAsBvC,EAAOK,MAAMO,QAAO,SAAA4B,GAAG,OAC9Cd,EAAcR,QAAU,GAAKQ,EAAce,SAASD,EAAIE,aAAaC,cACrEH,EAAIhC,cAAgBE,KACzB,OAAO6B,EAAoBrB,OAAS,EAChC,yBAAK0B,IAAKlC,EAASoB,UAAU,QACzB,uCAAapB,EAAb,MAAyBT,EAAeS,GAAxC,KAAoDO,EAApD,KACCD,EAAWV,KAAI,SAACuC,GACb,IAAMC,EAAsBP,EAAoB3B,QAAO,SAAA4B,GAAG,OAAKA,EAAI3B,eAAiBgC,KACpF,OAAOC,EAAoB5B,OAAS,EAChC,yBAAK0B,IAAKC,EAAUf,UAAU,aAC1B,wBAAIA,UAAU,QAAd,YAA+Be,EAA/B,MAA4C3C,EAAeQ,GAASmC,IACnEC,EAAoBxC,KAAI,SAACkC,GAAD,OACrB,wBAAIV,UAAU,eACV,wBAAIc,IAAKJ,EAAIE,cACT,kBAAC,OAAD,CACIK,GAAIP,EAAIE,aAAaC,YACpBH,EAAIE,aAAaC,WAFtB,MAEqCH,EAAIQ,qBAKxD,kCAGZ,oCAWtB,IAAMC,EAAS","file":"component---src-pages-index-js-408b8f5372a92c13b946.js","sourcesContent":["import React, {useState} from \"react\"\nimport {Link} from \"gatsby\"\n\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport {useLunr} from \"react-lunr\";\n\nfunction replaceAccents(text) {\n    return text.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\n}\n\nconst IndexPage = ({data}) => {\n\n    const index = data.localSearchArticulos.index\n    const store = data.localSearchArticulos.store\n    const indice = data.indice\n\n\n    const secciones_desc = {}\n    const capitulos_desc = {}\n    const secciones = [...new Set(indice.nodes.map(node => {\n        secciones_desc[node.NRO_SECCION] = node.DESC_SECCION\n        capitulos_desc[node.NRO_SECCION] = {}\n        return node.NRO_SECCION\n    }))];\n    const secc_articulos = secciones.map((seccion) => {\n        const arts = indice.nodes.filter(node => node.NRO_SECCION === seccion).map(node => {\n            capitulos_desc[seccion][node.NRO_CAPITULO] = node.DESC_CAPITULO\n            return node.NRO_CAPITULO\n        })\n        const cap = [...new Set(arts)]\n        return {\n            seccion: seccion,\n            captitulos: cap,\n            cant_articulos: arts.length\n        }\n    })\n\n    const [query, setQuery] = useState('')\n    const [querySinAcento, setQuerySinAcento] = useState('')\n    const results = useLunr(querySinAcento, index, store)\n    const results_array = results.map(result => result.numeroArticulo)\n\n    /*  const word_count = JSON.parse(index).invertedIndex.map((entry) => {\n          let text = entry[0]\n          let value = Object.keys(entry[1].textoModificado).length\n          return {text, value}\n      }).filter(({text,value})=> value>10)\n      console.log(word_count)*/\n\n\n    return (\n        <Layout>\n            <SEO title=\"Todos los artículos\"/>\n            <p className=\"w-100 text-center font-sans text-xs lg:text-sm\">En 2021 se intentarán anular 135 artículos de\n                la LUC vía referéndum. Esta es una comparación de los artículos antes y después basada en datos del\n                IMPO</p>\n\n            <div className=\"mx-auto p-5 w-100 lg:w-1/2 \">\n                <input\n                    placeholder={\"Buscar artículos por palabra\"}\n                    className=\"mx-auto w-full h-12 focus:outline-none focus:ring focus:border-blue-300 p-2 border-2\"\n                    name=\"query\"\n                    value={query}\n                    onChange={(event) => {\n                        setQuery(event.target.value)\n                        setQuerySinAcento(replaceAccents(event.target.value))\n                    }}\n                />\n                <span className=\"font-sans text-center text-xs text-red-700\">\n\n                <p className=\"mt-5\">\n                    {results.length > 0 ? (<span>Mostrando artículos artículos con \"{query}\"</span>) : (\n                        <span>Mostrando todos los artículos a derogar</span>)}\n                </p>\n                    </span>\n            </div>\n            <div className=\"font-sans\">\n                {secc_articulos.map(({seccion, cant_articulos, captitulos}) => {\n                        const secciones_filtradas = indice.nodes.filter(art => (\n                            (results_array.length <= 0 || results_array.includes(art.NRO_ARTICULO.toString())) &&\n                            (art.NRO_SECCION === seccion)))\n                        return secciones_filtradas.length > 0 ? (\n                            <div key={seccion} className=\"py-3\">\n                                <h3>SECCIÓN {seccion} - {secciones_desc[seccion]} ({cant_articulos})</h3>\n                                {captitulos.map((capitulo) => {\n                                    const capitulos_filtrados = secciones_filtradas.filter(art => (art.NRO_CAPITULO === capitulo))\n                                    return capitulos_filtrados.length > 0 ? (\n                                        <div key={capitulo} className=\"py-2 pl-4\">\n                                            <h4 className=\"mb-2\">CAPÍTULO {capitulo} - {capitulos_desc[seccion][capitulo]}</h4>\n                                            {capitulos_filtrados.map((art) => (\n                                                <ul className=\"pl-4 py-0.5\">\n                                                    <li key={art.NRO_ARTICULO}>\n                                                        <Link\n                                                            to={art.NRO_ARTICULO.toString()}>\n                                                            {art.NRO_ARTICULO.toString()} - {art.DESC_ARTICULO}</Link>\n                                                    </li>\n                                                </ul>\n                                            ))}\n                                        </div>\n                                    ) : (<div></div>)\n                                })}\n                            </div>\n                        ) : (<div></div>)\n                    }\n                )}\n            </div>\n        </Layout>\n    )\n\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n    query {\n        articulos: allLucJson {\n            nodes {\n                numeroArticulo\n            }\n        }\n        localSearchArticulos {\n            index\n            store\n        }\n        indiceSeccion: allIndiceYaml {\n            group(field: NRO_SECCION) {\n                fieldValue\n                totalCount\n                nodes {\n                    NRO_CAPITULO\n                }\n            }\n        }\n        indiceCapitulo: allIndiceYaml {\n            group(field: NRO_CAPITULO) {\n                fieldValue\n                totalCount\n                nodes {\n                    NRO_SECCION\n                }\n            }\n        }\n        indice: allIndiceYaml {\n            nodes {\n                NRO_CAPITULO\n                DESC_CAPITULO\n                NRO_ARTICULO\n                DESC_ARTICULO\n                NRO_SECCION\n                DESC_SECCION\n            }\n        }\n    }\n\n                    `\n"],"sourceRoot":""}